@model BonfireWebApp.Models.Beacon

@{
    ViewBag.Title = !String.IsNullOrWhiteSpace(Model.uuid) ? "Edit Beacon" : "Add Beacon";
}

<style>
    bigger-form-control {
        min-width:300px;
    }
</style>

@if (!String.IsNullOrWhiteSpace(Model.uuid))
{
    <h2>Edit Existing Beacon</h2>
}
else
{
    <h2>Add New Beacon</h2>
}

@using (Html.BeginForm("Save", "Beacons", FormMethod.Post, new { @data_toggle = "validator" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.Hidden("typeofedit", !String.IsNullOrWhiteSpace(Model.uuid) ? "exists" : "new")
        <div class="form-group">
            @Html.LabelFor(model => model.uuid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!String.IsNullOrWhiteSpace(Model.uuid))
                {
                    @Html.EditorFor(model => model.uuid, new { htmlAttributes = new { @type="uuid", @class = "form-control", @readonly = "true", @required = "true", @style = "min-width:300px" } })
                }
                else
                {
                    @Html.EditorFor(model => model.uuid, new { htmlAttributes = new { @type="uuid", @class = "form-control", @required = "true", @style = "min-width:300px" } })
                }
                @Html.ValidationMessageFor(model => model.uuid, "", new { @class = "text-danger" })
                <div class="help-block with-errors"></div>
            </div>
        </div>

        <div class="form-group has-feedback">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Name, new { @class = "form-control", @required = "true", @style = "min-width:300px", @rows = 4 })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                <div class="help-block with-errors"></div>
            </div>
        </div>

        <div class="form-group has-feedback">
            @Html.LabelFor(model => model.Localization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Localization, new { htmlAttributes = new { @class = "form-control", @required = "true", @style = "min-width:300px" } })
                @Html.ValidationMessageFor(model => model.Localization, "", new { @class = "text-danger" })
                <div class="help-block with-errors"></div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" name="Save" class="btn btn-default">Save</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
